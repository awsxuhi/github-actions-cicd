name: AWS GenAI CICD Workflow

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]

# Avoid running the same workflow on the same branch concurrently
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  AWS_REGION: us-east-1

jobs:
  aws_genai_cicd:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write # read repository contents and write pull request comments
      contents: write # allow github action bot to push new content into existing pull requests
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        # Number of commits to fetch. 0 indicates all history for all branches and tags.
        # Default: 1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"
      # When using `cache: "npm"`, there is no need to manually configure caching with actions/cache@v4 as shown below:
      # - name: Cache dependencies
      #   id: cache
      #   uses: actions/cache@v4
      #   with:
      #     path: node_modules
      #     key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      # Install dependencies in .github/actions/aws-genai-cicd to ensure your custom action takes effect.
      - name: Install dependencies
        run: npm install
        shell: bash
        working-directory: .github/actions/aws-genai-cicd

      # Generate dist/index.js in .github/actions/aws-genai-cicd by executing `npm run build`.
      - name: Build project
        run: npm run build
        shell: bash
        working-directory: .github/actions/aws-genai-cicd

      - name: Debug GitHub Token
        run: |
          if [ -n "${{ secrets.GITHUB_TOKEN }}" ]; then
            echo "GitHub Token was set successfully!"
          else
            echo "GitHub Token has not yet been set!"
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: gha-session-${{ github.run_id }}-${{ github.job }}
          role-duration-seconds: 3600
          # `role-session-name` is an optional field used to specify a unique name for a role session. By assigning a unique `role-session-name` to each role session, you can more easily track and audit operations in AWS Cloud. This is particularly useful when reviewing CloudTrail logs, as it allows you to identify different sessions and their related activities based on the `role-session-name`.
          # role-session-name example: gha-session-10871592797-review, you can also simply using gha-session as the name. Don't worry about 2 concurrent runs having the same role-session-name.

      - name: Get AWS credentials (Optional Step)
        run: aws sts get-caller-identity

      - name: Leveraging Bedrock/Claude to generate PR description, do code review and/or generate unit tests
        uses: ./.github/actions/aws-genai-cicd
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          aws-region: us-east-1
          model-id: anthropic.claude-3-sonnet-20240229-v1:0
          generate-code-review: "true"
          generate-code-review-level: "detailed"
          generate-code-review-exclude-files: "*.md,*.json"
          generate-pr-description: "true"
          generate-unit-test: "false"
